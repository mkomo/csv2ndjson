#!/usr/bin/env python3

#from __future__ import print_function
import csv
import sys
import json
import getopt

def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)

USAGE='''Usage: csv2ndjson [OPTION]... [FILE]...
Translate FILE(s) from csv to ndjson and output to standard output.

With no FILE, or when FILE is -, read standard input.

  -H                Do not use header row to construct json objects (prints json arrays)
  -t                Input is tab-delimited
  -d <delimiter>    Input is delimited by <delimiter>
  -i                Include empty fields
  -h                Print this help message
'''

(optlist, args) = getopt.getopt(sys.argv[1:], 'hHtid:')

use_header = True
delim = ','
include_empty = False

for o, a in optlist:
    if o == "-H":
        use_header = False
    elif o == '-d':
        delim = a
    elif o == '-i':
        include_empty = True
    elif o == '-t':
        delim = '\t'
    elif o == '-h':
        eprint(USAGE)
        sys.exit(0)

files = [sys.stdin] if (len(args) == 0 or (len(args) == 1 and args[0] == '-')) else args


try:
    #TODO allow for no header, or multiline header
    for f in files:
        with (open(f, newline = '', encoding="utf-8-sig") if f != sys.stdin else f) as infile:
            reader = csv.reader(infile, delimiter=delim, quotechar='"')
            if use_header:
                header = next(reader)
                fields = header #TODO implement filter: if len(sys.argv) == 2 else sys.argv[2:]
            else:
                header = False

            # simple loop to print out ndjson of csv file assuming header line.
            for row in reader:
                if header:
                    d = dict(zip(header, row))
                    if include_empty:
                        print(json.dumps(dict(zip(fields, [d[f] for f in fields]))))
                    else:
                        print(json.dumps(dict([(f, d[f]) for f in fields if len(d[f]) > 0])))
                else:
                    print(json.dumps(row))
except BrokenPipeError:
    sys.stderr.close()
    sys.exit(32)
except KeyboardInterrupt:
    sys.stderr.close()
    sys.exit(130)
